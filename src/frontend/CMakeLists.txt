macro(add_gg_exec)
    set(_args ${ARGV})
    list(GET _args 0 _exe)
    add_executable(${_exe} ${_exe}.cc)
    list(REMOVE_AT _args 0)
    foreach(_lib ${_args})
        if (TARGET ${_lib})
            if (net STREQUAL ${_lib})
                target_link_libraries(${_exe} PRIVATE -Wl,--whole-archive ${_lib} -Wl,--no-whole-archive)
            else()
                target_link_libraries(${_exe} PRIVATE ${_lib})
            endif()
        else()
            set_target_properties(${_exe} PROPERTIES LINK_FLAGS ${_lib})
        endif()
    endforeach()
    install(TARGETS ${_exe})
endmacro()

add_gg_exec(gg-init util)
add_gg_exec(gg-hash -static thunk)
add_gg_exec(gg-collect thunk)
add_gg_exec(gg-create-thunk -static thunk)
add_gg_exec(gg-describe thunk)
add_gg_exec(gg-execute-server execution net protobufs execution thunk)
add_executable(gg-execute gg-execute.cc $<TARGET_OBJECTS:netobj>)
target_link_libraries(gg-execute execution storage thunk)
set_target_properties(gg-execute PROPERTIES LINK_FLAGS "-static -Wl,--whole-archive -lpthread -Wl,--no-whole-archive")
install(TARGETS gg-execute)
add_gg_exec(gg-force-and-run execution)
add_gg_exec(gg-force execution)
add_gg_exec(gg-get storage net thunk)
add_gg_exec(gg-infer util thunk)
add_gg_exec(gg-meow-worker protobufs net thunk execution util)
add_gg_exec(gg-mock thunk util trace)
add_gg_exec(gg-object-server net execution thunk util)
add_gg_exec(gg-put storage net thunk)
add_gg_exec(gg-s3-download net thunk)
add_gg_exec(gg-s3-upload net)
add_gg_exec(gg-thunksummary thunk)
add_gg_exec(gg-trace trace util)
add_gg_exec(gg util)
add_gg_exec(lambda-invoker net)
add_gg_exec(prune-file)
add_gg_exec(splice-lines)
